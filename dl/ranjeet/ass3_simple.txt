import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import pandas as pd
import numpy as np
import random
import matplotlib.pyplot as plt

cifar10= tf.keras.datasets.cifar10
(x_train, y_train), (x_test, y_test)= cifar10.load_data()

x_train.shape

plt.imshow(x_train[0])
print(y_train[0])
plt.show()

cnnmodel= keras.Sequential([
    layers.Conv2D(filters = 32, kernel_size=(3,3), activation='relu', input_shape=(32,32,3)),
    layers.MaxPooling2D((2,2)),
    
    layers.Conv2D(filters = 64, kernel_size=(3,3), activation='relu', input_shape=(32,32,3)),
    layers.MaxPooling2D((2,2)),
    
    layers.Flatten(),
    layers.Dense(64, activation='relu'),
    layers.Dense(10, activation='softmax'),
                
])

cnnmodel.compile(optimizer='adam',
                loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

history= cnnmodel.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=10)

predictions= cnnmodel.predict(x_test)

classes = ["airplane","automobile","bird","cat","deer","dog","frog","horse","ship","truck"]
plt.figure(figsize=(10,10))
plt.imshow(x_test[7].reshape(32,32,-1))
plt.title("VALUE IS ::"+str(classes[np.argmax(predictions[7], axis=0)]), size=20)

history.history.keys()

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.xlabel('accuracy')
plt.ylabel('epoch values')
plt.title('accuracy graph')
plt.show()



